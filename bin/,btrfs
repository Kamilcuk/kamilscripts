#!/bin/bash

r() {
	echo "${L_CYAN}+ $*${L_RESET}"
	"$@"
}

C_stats() {
	text=$(
		exec 2>&1
		r df -h "$fs"
		r btrfs device stats "$fs"
		r btrfs filesystem show "$fs"
		r btrfs filesystem df "$fs"
		r btrfs balance status "$fs"
		r btrfs scrub status "$fs"
		r btrfs filesystem usage "$fs"
		r btrfs device usage "$fs"
		r sensorstable | grep _input | cut -d: -f1,3- | column -t -s':'
	)
	awk -v COLUMNS="$(tput cols)" -v LINES="$(tput lines)" '
	BEGIN {
		cols = COLUMNS / 2 - 4
		lines = LINES - 4
	}
	{
		gsub(/\t/, "  ")
		buf[NR] = $0
	}
	func esclen(a, b) {
		b = a
		gsub(/\x1b\[[0-9;]*[mGKH]/, "", b)
		return cols + length(a) - length(b)
	}
	END {
		for (i = 1; i <= lines; ++i) {
			a = buf[i]
			b = buf[i + lines]
			printf("%-*.*s %-.*s\n", esclen(a), esclen(a), a, esclen(b), b)
		}
	}' <<<"$text"
}

C_s() {
	C_stats
}

fs=/

. L_lib.sh L_argparse -- call=function prefix=C_ ---- "$@"
