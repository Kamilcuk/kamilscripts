#!/bin/bash
set -euo pipefail
shopt -s nullglob

# This script should recreate ssh cofiguration from template files.
# The template files are stored in ~/.ssh/config.d/*.sh
# If one of template files changes, the configuration should be recreated.
# If ~/.ssh/config is newer then newest file from ~/.ssh/config.d, then error.

name=$(basename "$0")

error() {
	echo "$name: ERROR:" "$*" >&2
}

fatal() {
	error "$@"
	exit 2
}

recreate_config() {
	if [[ ! -d ~/.ssh/config.d ]]; then return; fi

	local err
	err=0

	# Inform about old code removal.
	if [[ -e ~/.ssh/config.d/kamilscripts.conf ]]; then
		error "file ~/.ssh/config.d/kamilscripts.conf should be removed"
		err=1
	fi
	if [[ -e ~/.ssh/config.d/kamilscripts || -L ~/.ssh/config.d/kamilscripts ]]; then
		error "file ~/.ssh/config.d/kamilscripts should be removed"
		err=1
	fi

	shopt -s nullglob
	files=(~/.ssh/config.d/*.sh)

	# No files to generate the config from.
	if (("${#files[@]}" == 0)); then return; fi

	# Find the newest file to generate config from.
	newestf=""
	for i in "${files[@]}"; do
		if [[ ! -e "$i" ]]; then continue; fi
		if [[ -z "$newestf" || "$newestf" -nt "$i" ]]; then
			newestf="$i"
		fi
	done

	# Additional checking is done by checking if the file has our uuidmark.
	if [[ -e ~/.ssh/config ]] && ! grep -q '# UUIDMARK 6b248e21-6024-4544-8051-35cb3e3d2c4c' ~/.ssh/config; then
		error '~/.ssh/config does not have uuid mark. Remove ~/.ssh/config to refresh configuration.'
		err=1
	fi

	# If the ~/.ssh/config file was edited manually.
	if [[ -n "$newestf" && ~/.ssh/config -nt "$newestf" ]]; then
		error '~/.ssh/config is newer then the newest file in ~/.ssh/config.d/*.sh. Remove ~/.ssh/config to refresh configuration.'
		err=1
	fi

	if ((err)); then
		exit 2
	fi

	if [[ ! -e ~/.ssh/config ]] || [[ ~/.ssh/config -ot "$newestf" ]]; then
		echo "$name: Recreating ~/.ssh/config from ${#files[@]} files"
		tmp=$(
			cat <<EOF
# ----- snip ------
# DO NOT EDIT
# UUIDMARK 6b248e21-6024-4544-8051-35cb3e3d2c4c
# This file was generated by $(readlink -f "$0") script
# ----- snip ------

EOF
			for i in "${files[@]}"; do
				"$i"
			done
		)
		cat <<<"$tmp" > ~/.ssh/config
		touch --reference="$newestf" ~/.ssh/config
	fi
}

recreate_config

command ssh "$@"

