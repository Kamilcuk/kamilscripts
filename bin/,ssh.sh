#!/bin/bash
set -euo pipefail
shopt -s nullglob

# This script should recreate ssh cofiguration from template files.
# The template files are stored in ~/.ssh/config.d/*.sh
# If one of template files changes, the configuration should be recreated.
# If ~/.ssh/config is newer then newest file from ~/.ssh/config.d, then error.

name=$(basename "$0")

error() {
	echo "$name: ERROR: $*" >&2
}

fatal() {
	error "$@"
	exit 2
}

generate_newconfig() {
	newconfig=$(
		cat <<EOF
# ----- snip ------
# DO NOT EDIT
# UUIDMARK 6b248e21-6024-4544-8051-35cb3e3d2c4c
# This file was generated by $(readlink -f "$0") script
# ----- snip ------

EOF
	)
	for i in "${files[@]}"; do
		newconfig+=$'\n'$("$i") ||:
	done
}

# shellcheck disable=2088
recreate_config() {
	local i files newestf err

	files=()
	shopt -s nullglob
	for i in ~/.ssh/genconfig.sh ~/.ssh/genconfig.d/*.sh; do
		if [[ -r "$i" && -x "$i" ]]; then
			files+=("$i")
		fi
	done

	# No files to generate the config from.
	if (("${#files[@]}" == 0)); then return; fi

	# Find the newest file to generate config from.
	newestf=""
	for i in "${files[@]}"; do
		if [[ -z "$newestf" || "$newestf" -nt "$i" ]]; then
			newestf="$i"
		fi
	done

	err=0

	# Additional checking is done by checking if the file has our uuidmark.
	if [[ -e ~/.ssh/config ]] && ! grep -q '# UUIDMARK 6b248e21-6024-4544-8051-35cb3e3d2c4c' ~/.ssh/config; then
		error "~/.ssh/config does not have uuid mark. Remove ~/.ssh/config to refresh configuration."
		err=1
	fi

	# If the ~/.ssh/config file was edited manually.
	if [[ -n "$newestf" && ~/.ssh/config -nt "$newestf" ]]; then
		error "~/.ssh/config is newer then the newest genfile $newestf. Remove ~/.ssh/config to refresh configuration."
		generate_newconfig
		if hash diff 2>/dev/null >&2; then
			echo "+ diff newconfig ~/.ssh/config"
			diff - <<<"$newconfig" ~/.ssh/config ||:
		fi >&2
		err=1
	fi

	if ((err)); then
		exit 2
	fi

	if [[ ! -e ~/.ssh/config || ~/.ssh/config -ot "$newestf" ]]; then
		echo "$name: Recreating ~/.ssh/config from: ${files[*]}"
		generate_newconfig
		cat <<<"$newconfig" > ~/.ssh/config
		touch --reference="$newestf" ~/.ssh/config
	fi
}

recreate_config

if (($# == 1)); then
	case "$1" in
	config) exec ${EDITOR:-vim} ~/.ssh/genconfig.sh; ;;
	rmcontrol) exec rm -vf ~/.ssh/.socket_*; ;;
	esac
fi

command ssh "$@"

