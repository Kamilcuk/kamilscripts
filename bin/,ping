#!/bin/bash
set -euo pipefail

r() {
	echo "+ $*" >&2
	"$@"
}

scan() {
	set -x
	ip=$1
	if ping -c1 "$ip" >/dev/null 2>/dev/null; then
		if name=$(sed -n "/$ip /s///p" "$dns"); then
			name=$(resolvectl --json=short query "$ip" | sed -n 's/^\([0-9\.]:\).*/\1/')
			(
				flock 10
				echo "$1 $name" >> "$dns"
			) 10<"$dns"
		fi
		echo "$1 $name"
	fi
}

myping() {
	dns=$(mktemp)
	trap 'rm $dns' EXIT
	hosts=$(nmap -sL -n -oG - "$@" | sed -n 's/Host: \([0-9\.]*\).*/\1/p')
	set -x
	export -f scan
	export dns
	xargs -n1 bash -c 'scan "$@"' -- <<<"$hosts" | column -t
}

loop_cmd() {
	ping -W1 "$2" |
		while IFS= read -r line; do
			printf "%(%H:%M:%S)T ping %-*s: %s\n" "-1" "$1" "$2" "$line"
		done
}

loop() {
	export -f loop_cmd
	len=0
	for i in "$@"; do
		len=$((len > ${#i} ? len : ${#i}))
	done
	printf "%s\n" "$@" | xargs -P0 -n1 bash -c 'loop_cmd "$@"' -- "$len"
}

usage() {
	n=$(basename "$0")
	cat <<EOF
$n ip...
	Ping the range of ip addresses with nmap.
$n loop ip...
	Continously ping the ip addresses with ping.
$n (-h|--help)
EOF
}

main() {
	case "$1" in
	-h | --help)
		usage
		exit 2
		;;
	loop)
		shift
		loop "$@"
		;;
	*)
		#nmap -sn -PE -T 5 --max-rtt-timeout 100ms "$@"
		#exec nmap -n -sn -PE -R --max-rtt-timeout 100ms "$@"
		#myping "$@"
		nmap -sP "$@"
		;;
	esac
}

main "$@"
