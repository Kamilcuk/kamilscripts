#!/usr/bin/awk -f

# https://sites.google.com/site/dannychouinard/Home/unix-linux-trinkets/little-utilities/base64-and-base85-encoding-awk-scripts

function l() {
	if (++p > 72) {
		p = 0;
		print t;
	}
}

function s(v,b){
	if(v == 0) {
		printf(z);
		l();
	} else {
		o = t;
		for (n = 0; n < 5; n++) {
			o = o substr(h,(v%g) + 1, 1);
			v /= g
		}
		while (n > 4 - b) {
			printf(c, substr(o, n--, 1));
			l();
		}
	}
}

function a85encode() {
	printf("<~");
	while("od -vtu1" | getline){
		for(y = 1; y < NF;) {
			i += ($(++y) * m);
			m /= a;
			if (++k > 3) {
				s(i, k);
				k = i = 0;
				m = j
			}
		}
	}
	if(k) {
		s(i,k);
	}
	p++;
	l();
	print "~>"
}

function a85decode() {
	while(!f && getline < "/dev/stdin") {
		if (substr($0,1,2) == "<~")
			f = 1
	}
	while (f) {
		while (++p <= length($0) && f) {
			n = index(h, substr($0, p, 1));
			if (substr($0, p, 2) == "~>")
				f = 0;
			if (n > g) {
				printf(c c c c,0,0,0,0)
			} else {
				if(n--) {
					q = g * q + n;
					if (++i > 4) {
						while (--i) {
							printf(c, (q / j) % a);
							q *= a
						}
						q = 0
					}
				}
			}
		}
		p = 0;
		if (!getline < "/dev/stdin")
			f = 0
	}
	if (i) {
		q = ++q * g ^ (5 - i--);
		while (i--) {
			printf(c, (q / j) % a);
			q = a * (q - (j * int(q / j)))
		}
	}
}

function eprint(msg) {
	print msg > "/dev/stderr"
}


function fatal(msg) {
	name = ",ascii85"
	eprint(name ": error: " msg)
	exit(1)
}

BEGIN {
	z = h = "z";
	c = "%c";
	a = 256;
	i = g = 85;
	m = j = a ^ 3;
	p = 2;
	while (i) {
		h = sprintf(c, 32 + i--) h
	}
	ARGC -= 1
	if (ARGC == 0) {
		a85encode()
	} else if (ARGC == 1) {
		if (ARGV[1] == "h" || ARGV[1] == "help") {
			fatal("available arguments: d or decode for decoding")
		} else if (ARGV[1] == "d" || ARGV[1] == "decode") {
			a85decode()
		} else {
			fatal("Invalid argument: "ARGV[1])
		}
	} else {
		fatal("Too many arguments - only one is supported")
	}
}

