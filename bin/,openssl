#!/bin/bash
set -euo pipefail

_openssl() {
	echo "+" "openssl" "$@" >&2
	command openssl "$@"
}

C_generate_new_key_and_csr() {
	_openssl req -out "$1" -new -newkey rsa:4096-nodes -keyout "$2"
}

C_generate_self_signed_certificate() {
	_openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:4096 -keyout "$1" -out "$2"
}

C_generate_csr_for_key() {
	_openssl req -out CSR.csr -key "$1" -new
}

C_generate_csr_for_certificate() {
	_openssl x509 -x509toreq -in "$1" -out CSR.csr -signkey "$2" -out "$3"
}

C_remove_passphrase_from_key() {
	_openssl rsa -in "$1" -out "$2"
}

C_check_csr() {
	_openssl req -text -noout -verify -in "$1"
}

C_check_private_key() {
	_openssl rsa -check -in "$1"
}

C_check_certificate() {
	_openssl x509 -text -noout -in "$1"
}

C_check_pkcs12_file() {
	_openssl pkcs12 -info -in "$1"
}

C_info() { C_check_certificate "$@"; }

C_regenerate_csr() {
	if (($# != 3)); then
		echo "Usage: user_previous_certificate_path user_key_path output_csr_path" >&2
		exit 1
	fi
	_openssl x509 -x509toreq -in "$1" -signkey "$2" -out "$3"
}

. ,lib_lib "C_" "$@"

