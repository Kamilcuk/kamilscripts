#!/usr/bin/bash
set -euo pipefail

umount_all() {
	local dir
	dir=$1
	L_assert "(($# == 1))"
	if [[ ! -e "$dir" ]]; then
		return
	fi
	local mounts
	if ! mounts=$(findmnt -lvnR --real --output TARGET "$dir" | tac); then
		return
	fi
	local i
	for i in $mounts; do
		while mountpoint "$i" && ! umount "$i"; do
			sleep 1
		done
	done
	echo "$dir fully unmounted!"
}

find_rpi_disc() {
	exit 1
}

trap_exit() {
	for i in "$ROOT"/*; do
		if mountpoint "$i"; then
			umount "$i"
		fi
	done
	umount "$ROOT"
	umount ./sdb2/* ./sdb2 || :
	umount ./sdb2/* ./sdb2 || :
}

provision_script() {
	set -xeuo pipefail

	cat <<EOF >/etc/apt/apt.conf.d/01norecommend
APT::Install-Recommends "0";
APT::Install-Suggests "0";
EOF

	apt-get install -y tmux neovim git

	systemctl disable --now rsyslog

	apt-get remove -y rsyslog

	sed -i 's/#Storage=auto/Storage=persistent/' /etc/systemd/journald.conf

	sed -i 's/#SplitMode=uid/SplitMode=none/' /etc/systemd/journald.conf

	systemctl enable --now systemd-journald

	if id kamil >/dev/null && [[ ! -e /home/kamil/.ssh/id_rsa ]]; then
		sudo -u kamil ssh-keygen -N ""
	fi

	if [[ ! ~/.ssh/id_rsa ]]; then
		ssh-keygen -N ""
	fi

	systemctl disable --now apt-daily-upgrade.timer

	git clone git@gitlab.com:Kamcuk/kamilscripts.git ~/.kamilscripts

	~/.kamilscripts/bin/,kamilscripts.sh -k

	cat <<EOF >/etc/systemd/network/wlan0.network
[Match]
Name=wlan0
[Network]
DHCP=yes
EOF

	cat <<EOF >/etc/systemd/network/eth0.network
[Match]
Name=eth0
[Network]
DHCP=yes
EOF

}

###############################################################################

cmd_chroot() {
	set -x
	disc=$1
	shift
	L_assert "(($# == 0))"
	file "$disc" "$disc"1 "$disc"2
	if ! file ${disc}3; then
		L_error "bla"
		exit 123
	fi
	umount_all /mnt/rpi
	cd "$(dirname "$(readlink -f "$0")")"
	fsck -y "$disc"2
	trap 'umount_all /mnt/rpi' EXIT
	mkdir -vp /mnt/rpi/boot
	mount "$disc"2 /mnt/rpi
	file /mnt/rpi/bin/ls
	cp /usr/bin/qemu-arm-static /mnt/rpi/bin
	mount "$disc"1 /mnt/rpi/boot
	arch-chroot /mnt/rpi
}

cmd_install_arch_rpi3() {
	disc=$1
	shift
	L_assert "(($# == 0))"
	L_run fdisk -l "$disc"
	echo
	echo "ARE YOU SURE YOU WANT TO FORMAT $disc? THIS WILL CREATE DIRECTORIES HERE"
	read -r
	set -x
	echo 'o p n p 1  +200M t c n p 2   p w ' | sed 's/ /\n/g' | fdisk "$disc"
	partprobe
	[[ -e "$disc"1 ]]
	[[ -e "$disc"2 ]]
	mkfs.vfat -n RPI3BOOT "$disc"1
	mkfs.ext4 -L RPI3ROOT "$disc"2
	mkdir -vp ./root
	mount "$disc"2 ./root
	mkdir -vp ./root/boot
	mount "$disc"1 ./root/boot
	wget -c http://os.archlinuxarm.org/os/ArchLinuxARM-rpi-armv7-latest.tar.gz
	bsdtar -xpf ArchLinuxARM-rpi-armv7-latest.tar.gz -C root || :
	sync
	echo
	echo 'ALL OK? If YES, then unmounting and fsck'
	read -p
	umount ./root/boot ./root
	fsck -yv "$disc"1
	fsck -yvf "$disc"2
	echo "DONE"
}

. lib_lib.sh cmd_ "$@"
