####
# Maintainer: Kamil Cukrowski <kamilcukrowski@gmail.com>

pkgbase=
pkgname=kamilscripts
pkgver=$(git describe --tags | sed 's/\([^-]*-g\)/r\1/;s/-/./g')
pkgrel=2
epoch=
pkgdesc='These are Kamil Cukrowski private/public scripts. Do not use.'
arch=('any')
url="https://gitlab.com/Kamcuk/$pkgname"
license=('MIT' 'custom:Beerware')
groups=()
depends=(bash bash-completion git vim)
makedepends=()
checkdepends=()
optdepends=(python reflector)
provides=()
conflicts=()
replaces=(kamil-scripts)
backup=(etc/bash_completion.d/kamil-scripts.sh)
options=()
install="$pkgname.install"
changelog=
source=(PKGBUILD)
noextract=()
md5sums=('SKIP')
validpgpkeys=()

assert() {
	if ! eval "$1"; then
		shift 1
		echo "Assertion $1 failed." "$@" >&2
		exit 2
	fi
}

create_symlinks() {
	local srcdir lntgt destdir srcname destname src dest files
	srcdir="$1"
	lntgtdir="$2"
	destdir="$3"
	srcname="$4"
	destname="$5"

	lntgt=$(readlink -m "$lntgtdir"/"$srcname")
	src="$srcdir/$srcname"
	dest="$destdir"/"$destname"

	IFS=$'\n' files=($(cd "$src" && find . -mindepth 1 -type f -printf '%P\n'))
	assert '[ "${#files[@]}" -ne 0 ]' "There are no files inside $src"

	mkdir -v -p "$dest"
	for file in "${files[@]}"; do
		ln -v -s "$lntgt"/"$file" "$dest"/"$file"
	done
}

package() { (

local DIR
set -euo pipefail -e errtrace
rm -v PKGBUILD

DIR=$(git rev-parse --show-toplevel)

create_symlinks "$DIR" /usr/lib/kamilscripts "$pkgdir"   /bin       /usr/bin
echo
create_symlinks "$DIR" /usr/lib/kamilscripts "$pkgdir"   /systemd   /usr/lib/systemd/system
echo
#cp -v -r "$DIR"/pkg/resources/* "$pkgdir"/
#echo
chown root:root -v -R "$pkgdir"/*

); }

